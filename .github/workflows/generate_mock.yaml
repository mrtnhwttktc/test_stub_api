name: Publish stub API endpoints
run-name: deploy-stub-api

on:
  workflow_dispatch:
    inputs:
      project_name:
        required: true
        type: string
      stub_api_name:
        required: true
        type: string
      openapi_file_path:
        required: true
        type: string
      openapi_file_name:
        required: true
        type: string

env:
  AWS_DEFAULT_REGION: us-west-2
  S3_BUCKET: s3://dev-stub-api-imposter-s3-us-west-2/
  LAMBDA_FUNCTION_NAME: dev-stub-api-imposter-lb-function

jobs:
  imposter-cli-job:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Install Imposer CLI
        run: |
          curl -L https://raw.githubusercontent.com/gatehill/imposter-cli/main/install/install_imposter.sh | bash -

      # No output flag for imposter scaffold, file should be named <original_filename>-config.yaml
      - name: Generate Imposter Specification File
        run: imposter scaffold ${{ github.event.inputs.openapi_file_path }}
      
      - name: Generate New File Path
        id: generate-imposter-file-path
        run: |
          OPENAPI_FILE_NAME="${{ github.event.inputs.openapi_file_name }}"
          IMPOSTER_FILE_NAME="${{ github.event.inputs.openapi_file_path }}/${OPENAPI_FILE_NAME%.yaml}-config.yaml"
          echo "IMPOSTER_FILE_NAME=$IMPOSTER_FILE_NAME" >> $GITHUB_OUTPUT
      
      - name: Add path to imposter-spec file
      # we need to add path: / to the generated imposter config file to have directory based routes.
      # adding an empty string after the colon to escape it, yaml doesn't like spaces after colons in string.
        run: echo "path:"" /" >> $IMPOSTER_FILE_NAME
        env:
          IMPOSTER_FILE_NAME: ${{ steps.generate-imposter-file-path.outputs.IMPOSTER_FILE_NAME }}

      - name: Setup AWS cli
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: Upload imposter file to S3
      # Uploads the imposter config file to a folder named after the project name
        run: aws s3 cp $IMPOSTER_FILE_NAME ${{ env.S3_BUCKET }}${{ github.event.inputs.project_name }}/${{ github.event.inputs.stub_api_name }}/${{ github.event.inputs.project_name }}-stub-api-config.yaml
        env:
          IMPOSTER_FILE_NAME: ${{ steps.generate-imposter-file-path.outputs.IMPOSTER_FILE_NAME }}
      
      - name: Upload OpenAPI file to S3
      # Uploads the OpenAPI specification file to a folder named after the project name
        run: aws s3 cp ${{ github.event.inputs.openapi_file_path }}${{ github.event.inputs.openapi_file_name }} ${{ env.S3_BUCKET }}${{ github.event.inputs.project_name }}/${{ github.event.inputs.stub_api_name }}/${{ github.event.inputs.openapi_file_name }}
        env:
          IMPOSTER_FILE_NAME: ${{ steps.generate-imposter-file-path.outputs.IMPOSTER_FILE_NAME }}

      # In order to use imediatly the new stub api, we need force refresh the lambda function
      # The easiest way is to change a env var for the lambda function
      - name: Get Lambda Current Counter Value
        id: get-counter
        run: |
          COUNTER=$(aws lambda get-function-configuration \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --query 'Environment.Variables.DUMMY_FORCE_REFRESH' \
            --output text)
          echo "COUNTER=$COUNTER" >> $GITHUB_OUTPUT

      - name: Increment Counter and update lambda function
        run: |
          NEW_COUNTER=$((COUNTER + 1))
          aws lambda update-function-configuration \
            --function-name ${{ env.LAMBDA_FUNCTION_NAME }} \
            --environment "Variables={
              DUMMY_FORCE_REFRESH=$NEW_COUNTER,
              IMPOSTER_CONFIG_DIR=${{ env.S3_BUCKET }},
              IMPOSTER_AUTO_BASE_PATH=true,
              IMPOSTER_CONFIG_SCAN_RECURSIVE=true,
            }"
        env:
          COUNTER: ${{ steps.get-counter.outputs.COUNTER }}
